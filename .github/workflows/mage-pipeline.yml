name: Mage.ai Pipeline Validation

on:
  push:
    paths:
      - 'backend/mage/**'
      - '.github/workflows/mage-pipeline.yml'
  pull_request:
    paths:
      - 'backend/mage/**'
      - '.github/workflows/mage-pipeline.yml'

jobs:
  validate:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: backend/mage

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.9'
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install ruff pytest mage-ai

      - name: Lint with ruff
        run: |
          ruff check .
          ruff format --check .

      - name: Validate Mage configuration
        run: |
          python -c "
          import yaml
          import sys
          from mage_ai.data_preparation.repo_manager import RepoManager
          from mage_ai.orchestration.pipeline_scheduler import PipelineScheduler
          
          # Validate YAML configurations
          try:
              with open('metadata.yaml', 'r') as f:
                  metadata = yaml.safe_load(f)
              with open('io_config.yaml', 'r') as f:
                  io_config = yaml.safe_load(f)
              print('Pipeline configuration is valid YAML')
              
              # Initialize repo manager
              repo_manager = RepoManager()
              repo_manager.validate_repo_structure()
              print('Repository structure is valid')
              
              # Validate pipeline
              pipeline_uuid = 'wetlands_pipeline'
              scheduler = PipelineScheduler(pipeline_uuid)
              scheduler.validate_pipeline()
              print(f'Pipeline {pipeline_uuid} is valid')
              
          except Exception as e:
              print(f'Validation failed: {e}')
              sys.exit(1)
          "

      - name: Run tests
        run: |
          pytest tests/ -v

  docker:
    runs-on: ubuntu-latest
    needs: validate

    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image
        uses: docker/build-push-action@v5
        with:
          context: backend/mage
          push: false
          load: true
          tags: mageai-test:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Test Mage.ai in Docker
        run: |
          docker run --rm mageai-test:latest python -c "
          from mage_ai.data_preparation.repo_manager import get_repo_path
          from mage_ai.orchestration.pipeline_scheduler import PipelineScheduler
          
          # Verify Mage.ai setup
          repo_path = get_repo_path()
          print(f'Mage.ai repository path: {repo_path}')
          
          # Test pipeline loading
          pipeline_uuid = 'wetlands_pipeline'
          scheduler = PipelineScheduler(pipeline_uuid)
          print(f'Successfully loaded pipeline: {pipeline_uuid}')
          " 