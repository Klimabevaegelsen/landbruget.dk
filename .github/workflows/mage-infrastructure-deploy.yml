name: Deploy Mage.ai Infrastructure to Cloud Run

on:
  push:
    branches:
      - main

env:
  PROJECT_ID: landbrugsdata-1
  REGION: europe-west1
  SERVICE: mage-data-prep
  GCS_BUCKET_NAME: europe-west1-landbrug-bc7a96db-bucket
  TF_VAR_container_cpu: "4000m"
  TF_VAR_container_memory: "8G"

jobs:
  deploy:
    runs-on: ubuntu-latest

    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Google Auth
        id: auth
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v1

      - name: Authorize Docker push
        run: gcloud auth configure-docker

      # This step builds a Docker image that bundles all Mage.ai pipeline code
      # Following Mage.ai's recommended approach for production deployment
      # Any changes to pipelines or code will require a new build and deployment
      - name: Build and Push Container
        run: |-
          docker build \
            --build-arg MAGE_ENVIRONMENT=production \
            --build-arg MAGE_DEV_MODE=false \
            -t gcr.io/${{ env.PROJECT_ID }}/${{ env.SERVICE }}:${{ github.sha }} \
            -f backend/mage.Dockerfile .
          docker push gcr.io/${{ env.PROJECT_ID }}/${{ env.SERVICE }}:${{ github.sha }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.7

      - name: Terraform Init
        working-directory: backend/terraform
        run: terraform init

      - name: Terraform Plan
        working-directory: backend/terraform
        env:
          TF_VAR_project_id: ${{ env.PROJECT_ID }}
          TF_VAR_region: ${{ env.REGION }}
          TF_VAR_app_name: ${{ env.SERVICE }}
          TF_VAR_docker_image: gcr.io/${{ env.PROJECT_ID }}/${{ env.SERVICE }}:${{ github.sha }}
        run: terraform plan -out=tfplan

      - name: Terraform Apply
        working-directory: backend/terraform
        run: terraform apply -auto-approve tfplan 