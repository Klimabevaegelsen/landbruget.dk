name: Deploy Mage.ai Infrastructure to Cloud Run

on:
  workflow_run:
    workflows: ["Build & Push Mage.ai Docker Image"]
    types:
      - completed
  push:
    branches:
      - main
    paths:
      - 'backend/terraform/**'

env:
  PROJECT_ID: landbrugsdata-1
  REGION: europe-west1
  SERVICE: mage-data-prep
  GCS_BUCKET_NAME: mage-data-storage
  TF_VAR_container_cpu: "4000m"
  TF_VAR_container_memory: "8G"

jobs:
  deploy:
    runs-on: ubuntu-latest
    # Only run if direct push to terraform directory OR if the build workflow succeeded
    if: github.event_name == 'push' || github.event.workflow_run.conclusion == 'success'

    permissions:
      contents: 'read'
      id-token: 'write'
      actions: 'read'  # Needed to download artifacts

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      # Download Docker image reference if this was triggered by the build workflow
      - name: Download Docker Image Reference
        if: github.event_name == 'workflow_run'
        uses: dawidd6/action-download-artifact@v3
        with:
          workflow: mage-docker-build.yml
          workflow_conclusion: success
          name: docker-image

      # Set Docker image from artifact or use latest if artifact not available
      - name: Set Docker Image
        id: set-image
        run: |
          if [ -f "docker-image.txt" ]; then
            DOCKER_IMAGE=$(cat docker-image.txt | cut -d'=' -f2)
            echo "Using Docker image from build: $DOCKER_IMAGE"
          else
            DOCKER_IMAGE="gcr.io/${{ env.PROJECT_ID }}/${{ env.SERVICE }}:latest"
            echo "Using latest Docker image: $DOCKER_IMAGE"
          fi
          echo "DOCKER_IMAGE=$DOCKER_IMAGE" >> $GITHUB_ENV

      - name: Google Auth
        id: auth
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v1

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Terraform Init
        working-directory: backend/terraform
        run: terraform init

      - name: Terraform Plan
        working-directory: backend/terraform
        env:
          TF_VAR_project_id: ${{ env.PROJECT_ID }}
          TF_VAR_region: ${{ env.REGION }}
          TF_VAR_app_name: ${{ env.SERVICE }}
          TF_VAR_docker_image: ${{ env.DOCKER_IMAGE }}
          TF_VAR_gcs_bucket_name: ${{ env.GCS_BUCKET_NAME }}
        run: terraform plan -out=tfplan

      - name: Terraform Apply
        working-directory: backend/terraform
        run: terraform apply -auto-approve tfplan 